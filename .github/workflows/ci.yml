name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend (Go)
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}
      - name: Install dependencies
        run: cd server && go mod download
      - name: Set backend env
        run: |
          echo "DB_USER=${{ secrets.MYSQL_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.MYSQL_DATABASE }}" >> $GITHUB_ENV
      - name: Run Go tests
        run: cd server && go test ./...
      - name: Build backend Docker image
        run: docker build -t user-manager-backend ./server

  frontend:
    name: Frontend (Vue)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Install dependencies
        run: cd client && pnpm install
      - name: Run frontend tests
        run: cd client && pnpm run test:unit
      - name: Build frontend Docker image
        run: docker build -t user-manager-frontend ./client 